# OS: 64-bit Windows Server 2012 R2
# Compilers: 64-bit MinGw-w64 5.1.0 (downloaded during script execution)
# Python: 2.7, 64-bit
# "ps:" commands are executed in PowerShell

# build version format: 1.0.1, 1.0.2, ...
version: 1.0.{build}

# prepare environment
environment:
# set custom path (will be more extended later in build_script section)
  path: C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Git\cmd;C:\Program Files\7-Zip;C:\Program Files (x86)\CMake\bin
# set MinGw-w64 (64-bit) version 5.1.0 download URL
  url: http://kent.dl.sourceforge.net/project/mingw-w64/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/5.1.0/threads-posix/seh/x86_64-5.1.0-release-posix-seh-rt_v4-rev0.7z
  matrix:
#   - python: C:\Python27;C:\Python27\Scripts
    - python: C:\Python27-x64;C:\Python27-x64\Scripts
#   - python: C:\Python34;C:\Python34\Scripts
#   - python: C:\Python34-x64;C:\Python34-x64\Scripts

build_script:
# add location of used Python to path
- set path=%path%;%python%

# create dir for custom software and move there
- mkdir C:\software && cd C:\software

# download and unpack MinGw-w64 compilers
- ps: wget $env:url -OutFile MinGW.7z
- 7z x MinGW.7z > NUL
# add compilers binary dir to path
- set path=%path%;C:\software\mingw64\bin

# download and unpack the  OpenBLAS library, integer*4 (or i32lp64) version
- ps: wget http://skylink.dl.sourceforge.net/project/openblas/v0.2.14/OpenBLAS-v0.2.14-Win64-int32.zip -OutFile OpenBLAS-v0.2.14-Win64-int32.zip
- 7z x OpenBLAS-v0.2.14-Win64-int32.zip > NUL
# add both OpenBLAS dynamic (libopenblas.dll) and static (libopenblas.a) library files dir to path
- set path=%path%;C:\software\OpenBLAS-v0.2.14-Win64-int32\bin;C:\software\OpenBLAS-v0.2.14-Win64-int32\lib;C:\software\OpenBLAS-v0.2.14-Win64-int32\include

# download and unpack MSMPI library (Windows version of OpenMPI)
# follow http://www.symscape.com/configure-msmpi-for-mingw-w64#comment-1824
- mkdir C:\software\msmpi && cd C:\software\msmpi
- ps: wget http://download.microsoft.com/download/A/1/3/A1397A8C-4751-433C-8330-F738C3BE2187/mpi_x64.Msi -OutFile mpi_x64.Msi
- 7z x mpi_x64.Msi
- gendef msmpi64.dll
- dlltool -d msmpi64.def -l libmsmpi64.a -D msmpi64.dll
- del mpi.f90
- ps: wget http://web-docs.gsi.de/~milias/msmpi/mpi.F90 -OutFile mpi.F90
- gfortran  -c  -D_WIN64  -D INT_PTR_KIND()=8 -fno-range-check   mpi.F90
- del mpif.h
- ps: wget http://web-docs.gsi.de/~milias/msmpi/mpif.h -OutFile mpif.h
- dir

# add msmpi to path
- set path=%path%;C:\software\msmpi

# download and upgrade pip
- ps: wget https://bootstrap.pypa.io/get-pip.py -OutFile get-pip.py
- python get-pip.py

# install py.test
- pip install pytest

# go back to project source dir
- cd %APPVEYOR_BUILD_FOLDER%

test_script:
  # show environment
 - echo %path%
  # run test
 - python setup --generator="MinGW Makefiles" --mpi --fc=gfortran
 - cd build
 - mingw32-make VERBOSE=1
 # - bin\example.exe
 - bin\example02.exe

